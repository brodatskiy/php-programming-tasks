openapi: 3.0.0
info:
  title: Php-academy-programming-tasks
  description: Простая реализация авторизации пользователя с помощью JWT
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
tags:
  - name: User

paths:
  /api/v1/auth:
    post:
      tags:
        - User
      summary: Авторизация пользователя по логину и паролю
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                name:
                  type: string
                  default: Ivan
                email:
                  type: string
                  default: Ivan@mail.com
                password:
                  type: string
                  default: password
              required:
                - name
                - email
                - password
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
      security:
        - basicAuth: []
  /api/v1/logout:
    get:
      tags:
        - User
      summary: Выход пользователя из системы
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
  /api/v1/register:
    post:
      tags:
        - User
      summary: Регистрация пользователя с ролью 'Админ'
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                name:
                  type: string
                  default: Ivan
                email:
                  type: string
                  default: ivan@mail.com
                password:
                  type: string
                  default: password
              required:
                - name
                - email
                - password
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /api/v1/postman/auth:
    post:
      tags:
        - User
      summary: Авторизация пользователя в postman с помощью базовой авторизации
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
      security:
        - basicAuth: [ ]
  /api/v1/profile/{userId}:
    get:
      tags:
        - User
      summary: Получение пользователя по ID
      parameters:
        - name: userId
          in: path
          description: ID пользователя, которого хотим получить
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
      services:
        - bearerAuth: []

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Tony
        gender:
          type: string
          example: male
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer